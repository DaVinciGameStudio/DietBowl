@model IList<DietBowl.Models.Recipe>

@{
    ViewData["Title"] = "Edit Diet";
    var dietRecipesJson = Json.Serialize(ViewBag.DietRecipes);
    var allRecipes = Json.Serialize(ViewBag.allJsRecipes);
}
<link rel="stylesheet" href="~/css/dietecitianaddrecipe.css" asp-append-version="true" />



<form>
    <input type="hidden" name="userId" value="@ViewBag.UserId" />
    <input type="hidden" name="date" value="@ViewBag.Date" />

    <div class="blue" style="text-align:center; color:black">
        <label id="labelKalorie"></label>
        <div class="progress">
            <div id="progressBarKalorie" class="progress-bar" role="progressbar" style="width: 0%" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100"></div>
        </div>        
        <label id="labelBialko"></label>
        <div class="progress">
            <div id="progressBarBialko" class="progress-bar" role="progressbar" style="width: 0%" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100"></div>
        </div>        
        <label id="labelWegle"></label>
        <div class="progress">
            <div id="progressBarWegle" class="progress-bar" role="progressbar" style="width: 0%" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100"></div>
        </div>       
        <label id="labelTluszcze"></label>
        <div class="progress">
            <div id="progressBarTluszcze" class="progress-bar" role="progressbar" style="width: 0%" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100"></div>
        </div>
        <div id="listAtOneDay">

        </div>
    </div>

    <div class="content">
        <div class="orange">
            <div class="d-flex justify-content-between align-items-center mb-3">
                <div class="input-group" style="width: 70%;">
                    <input class="form-control" placeholder="Wyszukaj przepis..."
                           autocomplete="on" id="inputLiveSearch" type="text" size="40"
                           onkeyup="showResult(this.value)">
                    <div class="input-group-addon" style="cursor: default;">
                        <span class="bi bi-search"></span>
                    </div>
                </div>
                <br />
                <div class="d-flex ml-auto">
                    <button class="btn btn-success " type="button" onclick="parseToSend()">Zapisz edycje</button>
                    <a href="/Diet/DietsCallendarForDietitian?userId=@ViewBag.userId" class="btn btn-primary">Powrót do kalendarza</a>


                </div>
            </div>



        </div>
    <div class="yellow">
        <div id="allList" class="recipe-grid">
            @foreach (var recipe in ViewBag.AllRecipes)
            {
                <div onclick="AddToList(@recipe.Id)" id="@recipe.Id">
                    <h5>@recipe.Title</h5>
                    <p>Category: @recipe.Category</p>
                    <p>Carbohydrate: @recipe.Carbohydrate g</p>
                    <p>Protein: @recipe.Protein g</p>
                    <p>Fat: @recipe.Fat g</p>
                    <p>Calories: @recipe.CalculateCalories() kcal</p>

                    <p>Alergeny:</p>
                    <ul>
                        @foreach (var allergen in recipe.Allergens)
                        {
                            <li>@allergen.Name</li>
                        }
                    </ul>
                </div>
            }
        </div>
        </div>
    
</form>

<link rel="stylesheet" href="~/css/dietecitianaddrecipe.css" asp-append-version="true" />
<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css">
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js"></script>

<script>
    var list = new Array();
    var tab = JSON.parse('@Html.Raw(ViewData["List"])');
    var allItems = @Html.Raw(allRecipes)

    function reset() {
        for (let i = 0; i < allList.children.length; i++) {
            allList.children[i].hidden = false;
        }
    }

    function showResult(str) {
        var result = new Array();
        if (str.length < 1) {
            reset();
            return;
        }
        tab.forEach(function (element) {
            let x = element.toLowerCase()
            if (x.includes(str.toLowerCase()))
                result.push(element);
        });
        searchHiden(result);
    }

    function searchHiden(result) {
        for (let i = 0; i < allList.children.length; i++) {
            if (result.includes(allList.children[i].getElementsByTagName("h5")[0].innerText)) {
                allList.children[i].hidden = false;
            } else {
                allList.children[i].hidden = true;
            }
        }
    }

    function AddToList(id) {
        if (list.includes(id)) {
            for (let i = 0; i < allList.children.length; i++) {
                if (list[i] == id) {
                    list.splice(i, 1);
                }
            }
        }
        else {
            list.push(id)
        }
        console.log(list)
        listAtOneDay.innerHTML = ""
        list.forEach(item => {
            const listItem = document.createElement('div')
            listItem.classList = "dodaniereceptury"
            const temp = document.getElementById('allList').children
            for (let i = 0; i < temp.length; i++) {
                if (temp[i].id == item) {
                    const originalElement = temp[i].cloneNode(true)
                    const copy = originalElement.querySelector("h5")
                    copy.addEventListener('click', () => { AddToList(item) })
                    listItem.appendChild(copy)
                }
            }
            listAtOneDay.appendChild(listItem)
        });
        updateLabel();
    }

    function parseToSend() {
        var listAtOneDayElement = document.getElementById('listAtOneDay');
        if (!listAtOneDayElement) {
            console.error("Element with id 'listAtOneDay' not found!");
            return;
        }

        var dietId = @Html.Raw(Json.Serialize(@ViewBag.dietId));

        document.getElementById('dietId').value = parseInt(dietId);
        document.getElementById('recipeList').value = JSON.stringify(list);
        document.getElementById('editDietForm').submit();
    }

    function initLabel() {
        document.getElementById("labelKalorie").textContent = "Kalorie: 0/" + @ViewBag.Calories;
        document.getElementById("labelBialko").textContent = "Białko: 0/" + @ViewBag.Protein;
        document.getElementById("labelWegle").textContent = "Węgle: 0/" + @ViewBag.Fat;
        document.getElementById("labelTluszcze").textContent = "Tłuszcze: 0/" + @ViewBag.Carbohydrate;
    }

    function swapMacro(wyliczone, wymagane, progressBar) {
        var percent = (wyliczone / wymagane) * 100;
        var element = document.getElementById(progressBar)
        element.style.width = percent + "%";
        element.setAttribute("aria-valuenow", percent)
        if (wyliczone > wymagane) { 
            element.style.backgroundColor = 'red' 
        }
        else {
            element.style.backgroundColor = 'green' 
        }
    }

    function updateLabel() {
        var wyliczoneKalorie = 0;
        var wyliczoneTluszcze = 0;
        var wyliczoneWegle = 0;
        var wyliczoneBialko = 0;
        for (var i = 0; i < allItems.length; i++) {
            if (list.includes(allItems[i].id)) {
                wyliczoneKalorie += allItems[i].calories;
                wyliczoneTluszcze += allItems[i].fat;
                wyliczoneWegle += allItems[i].carbohydrate;
                wyliczoneBialko += allItems[i].protein;
            }
        }
        document.getElementById("labelKalorie").textContent = "Kalorie: " + wyliczoneKalorie +"/"+ @ViewBag.Calories;
        document.getElementById("labelBialko").textContent = "Białko: " + wyliczoneTluszcze + "/" + @ViewBag.Protein;
        document.getElementById("labelWegle").textContent = "Węgle: " + wyliczoneWegle + "/" + @ViewBag.Fat;
        document.getElementById("labelTluszcze").textContent = "Tłuszcze: " + wyliczoneBialko + "/" + @ViewBag.Carbohydrate;
        
        swapMacro(wyliczoneKalorie, @ViewBag.Calories, "progressBarKalorie")
        swapMacro(wyliczoneTluszcze, @ViewBag.Protein, "progressBarTluszcze")
        swapMacro(wyliczoneWegle, @ViewBag.Fat, "progressBarWegle")
        swapMacro(wyliczoneBialko, @ViewBag.Carbohydrate, "progressBarBialko")
    }


    document.addEventListener("DOMContentLoaded", function () {
        initLabel()
        var listAtOneDayElement = document.getElementById('listAtOneDay');
        if (!listAtOneDayElement) {
            console.error("Element with id 'listAtOneDay' not found!");
        }
        var inna = @Html.Raw(dietRecipesJson)
                for (var i = 0; i < inna.length; i++) { AddToList(inna[i]) }
    });

</script>

<form id="editDietForm" asp-action="EditDiet" asp-controller="Diet" method="post">
    <input hidden name="dietId" id="dietId">
    <input hidden name="recipeList" id="recipeList">
</form>

