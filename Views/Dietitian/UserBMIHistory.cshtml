@model List<DietBowl.Models.BodyParameter>

<link rel="stylesheet" href="~/css/userbody.css" asp-append-version="true" />

<br />
<br />
<br />

@if (Model.Count > 0)
{
    <h1 style="text-align:center">Wykres BMI</h1>

    <div class="chart">
        <canvas id="bmiChart" width="400" height="200"></canvas>
    </div>
    <br />
    <br />
    <h1 style="text-align:center">Wykres wag</h1>
    <br />
    <br />
    <div class="chart">
        <canvas id="weightChart" width="400" height="200"></canvas>
    </div>
}
else
{
    <p style="text-align:center">Brak danych o parametrach ciała.</p>
}
<br />
<br />
<br />
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script>
    document.addEventListener('DOMContentLoaded', function () {
        // Chart for BMI
        var bmiCtx = document.getElementById('bmiChart').getContext('2d');

        var bmiData = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.OrderBy(bp => bp.Date).Select(bp => new { bp.Date, bp.BMI })));

        var bmiLabels = bmiData.map(function (e) {
            var date = new Date(e.Date);
            return date.toISOString().split('T')[0];
        });

        var bmis = bmiData.map(function (e) {
            return e.BMI;
        });

        var bmiChart = new Chart(bmiCtx, {
            type: 'line',
            data: {
                labels: bmiLabels,
                datasets: [{
                    label: 'BMI',
                    data: bmis,
                    borderColor: 'rgba(75, 192, 192, 1)',
                    backgroundColor: 'rgba(75, 192, 192, 0.2)',
                    borderWidth: 1,
                    pointRadius: 5,
                    pointBackgroundColor: 'rgba(75, 192, 192, 1)',
                    fill: true,
                    tension: 0.4 // Adjust tension for smoother curve
                }]
            },
            options: {
                plugins: {
                    legend: {
                        display: false
                    }
                },
                scales: {
                    x: {
                        title: {
                            display: true,
                            text: 'Data'
                        }
                    },
                    y: {
                        title: {
                            display: true,
                            text: 'BMI'
                        }
                    }
                }
            }
        });

        // Chart for Weight
        var weightCtx = document.getElementById('weightChart').getContext('2d');

        var weightData = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.OrderBy(bp => bp.Date).Select(bp => new { bp.Date, bp.Weight })));

        var weightLabels = weightData.map(function (e) {
            var date = new Date(e.Date);
            return date.toISOString().split('T')[0];
        });

        var weights = weightData.map(function (e) {
            return e.Weight;
        });

        var weightChart = new Chart(weightCtx, {
            type: 'line',
            data: {
                labels: weightLabels,
                datasets: [{
                    label: 'Weight',
                    data: weights,
                    borderColor: 'rgba(255, 99, 132, 1)',
                    backgroundColor: 'rgba(255, 99, 132, 0.2)',
                    borderWidth: 1,
                    pointRadius: 5,
                    pointBackgroundColor: 'rgba(255, 99, 132, 1)',
                    fill: true,
                    tension: 0.4 // Adjust tension for smoother curve
                }]
            },
            options: {
                plugins: {
                    legend: {
                        display: false
                    }
                },
                scales: {
                    x: {
                        title: {
                            display: true,
                            text: 'Data'
                        }
                    },
                    y: {
                        title: {
                            display: true,
                            text: 'Waga'
                        }
                    }
                }
            }
        });

        // Dynamically resize the canvas to match the table's width
        function resizeCharts() {
            var filterTable = document.querySelector('.filter table');
            var chartContainers = document.querySelectorAll('.chart');
            if (filterTable && chartContainers) {
                chartContainers.forEach(function (chartContainer) {
                    chartContainer.style.width = filterTable.offsetWidth + 'px';
                });
                bmiChart.resize();
                weightChart.resize();
            }
        }

        resizeCharts(); // Initial call
        window.addEventListener('resize', resizeCharts); // Resize on window resize
    });
</script>
